@page "/"
@implements IDisposable
@inject DatabaseManager DBMan;
@inject LocalStorageHandler LocalStorage;
@inject NavigationManager NavMan;

<Navbar></Navbar>

<div class="flex-column justify-center align-center">
    @for (int i = 0; i < 15; i++)
    {
        <button class="MyButton cursor-pointer" style="margin-top: 1vh;" @onclick="TestInsertUser">Test InsertUser</button>
        <button class="MyButton cursor-pointer" style="margin-top: 1vh;" @onclick="TestRetrieveUser">Test RetrieveUser</button>
    }
</div>

@code{
    public Guid guid = Guid.NewGuid();

    // page opened
    protected override void OnInitialized()
    {
        Global.Logger.LogInformation($"{guid} - Page Opened.");
        base.OnInitialized();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
    }

    public void TestInsertUser()
    {
        DBMan.OpenConnection();
        User user = new User("Nicktrovert", Hasher.Hash("VeryGoodPassword123!"), "MyMail1@gmail.com", "Nick", "Helmers", new DateOnly(2007, 04, 29));
        DBMan.InsertUser(user);
        DBMan.CloseConnection();
    }
    public void TestRetrieveUser()
    {
        DBMan.OpenConnection();
        User user = DBMan.RetrieveUser("Nicktrovert");
        DBMan.CloseConnection();
        Global.Logger.LogInformation($"--Retrieved User--\n       -Username:\"{user.Username}\"\n       -Password:\"{user.HashedPassword}\"\n       -Email:\"{user.Email}\"\n       -Name:\"{user.FirstName} {user.LastName}\"\n       -Birthdate:\"{user.Birthdate.ToString("yyyy-MM-dd")}\"\n       -ActivityState:\"{user.ActivityState.ToString()}\"\n       -LastOnline:\"{user.LastOnline.ToString("yyyy-MM-dd HH:mm:ss")}\"\n");
    }

    // page closed
    public void Dispose(){
        Global.Logger.LogInformation($"{guid} - Page Closed");
    }
}
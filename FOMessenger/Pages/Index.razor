@page "/"
@implements IDisposable
@inject DatabaseHandler DBHandler;
@inject LocalStorageHandler LocalStorage;
@inject NavigationManager NavMan;

<Navbar></Navbar>

<div class="flex-column justify-center align-center">
    @for (int i = 0; i < 30; i++)
    {
        <button class="MyButton cursor-pointer" @onclick="TestInsertUser">Test InsertUser</button>
    }
</div>

@code{
    public Guid guid = Guid.NewGuid();

    // page opened
    protected override void OnInitialized()
    {
        Global.Logger.LogInformation($"{guid} - Page Opened.");
        Uri uri = NavMan.ToAbsoluteUri(NavMan.Uri);
        Global.Logger.LogCritical($"Query: {uri.Query}");
        var kvq = QueryParser.ParseQuery(uri.Query);
        if (kvq.TryGetValue("name", out var outvalue))
        {
            Global.Logger.LogCritical($"Query - Name: {outvalue}");
        }
        if (kvq.TryGetValue("age", out var outvalue2))
        {
            Global.Logger.LogCritical($"Query - Age: {outvalue2}");
        }
        base.OnInitialized();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
    }

    public void TestInsertUser()
    {
        DBHandler.OpenConnection();
        User user = new User("Nicktrovert", Hasher.Hash("VeryGoodPassword123!"), "MyMail1@gmail.com", "Nick", "Helmers", new DateOnly(2007, 04, 29));
        DBHandler.InsertUser(user);
        DBHandler.CloseConnection();
    }

    // page closed
    public void Dispose(){
        Global.Logger.LogInformation($"{guid} - Page Closed");
    }
}